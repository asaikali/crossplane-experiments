
#! 
#! define the repo for object for tap 
#!

#@ def codeNamePatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.codeName
#@ end

#@ def regionPatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.region
#@ end

#@ def repoNamePatch(toFieldPath,name):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.codeName
transforms:
  - type: string
    string: 
     fmt: #@ "%s-" + name 
#@ end

#@ def repo(name):
name: #@ name
base:
  apiVersion: aws.tap.example.com/v1alpha1
  kind: XRepo
  metadata:
    name: ""
  spec:
    codeName: ""
    repoName: #@ name
    region: ""
patches:
  - #@ regionPatch(toFieldPath="spec.region")
  - #@ repoNamePatch(toFieldPath="metadata.name",name=name)
  - #@ codeNamePatch(toFieldPath="spec.codeName")
  - #@ codeNamePatch(toFieldPath="metadata.labels.tap")
#@ end

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: tap-aws-deployment
  labels:
    crossplane.io/xrd: xdeployments.aws.tap.example.com
spec:
  compositeTypeRef:
    apiVersion: aws.tap.example.com/v1alpha1
    kind: XDeployment
  resources:
    - #@ repo("cluster-essentials")
    - #@ repo("tap-packages")
