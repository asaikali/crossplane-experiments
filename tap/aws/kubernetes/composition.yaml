
#! 
#! define a EKS clusters for tap
#!

#@ def vpcNamePatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.codeName
transforms:
  - type: string
    string:
      fmt: "%s-vpc"  
#@ end

#@ def codeNameTagPatch():
type: FromCompositeFieldPath
toFieldPath: spec.forProvider.tags.tap
fromFieldPath: spec.codeName
#@ end

#@ def azNamePatch(toFieldPath,az):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.region
transforms:
  - type: string
    string:
      fmt: #@ "%s" + az  
#@ end

#@ def regionPatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.region
#@ end

#@ def subnetNamePatch(toFieldPath,type,az):
type: CombineFromComposite
toFieldPath: #@ toFieldPath
combine:
  variables:
    - fromFieldPath: spec.codeName
    - fromFieldPath: spec.region
  strategy: string
  string:
    fmt: #@  "vpc-%s-" + type + "-subnet-%s" + az 
#@ end

#@ def roleNamePatch(toFieldPath,suffix):
type: CombineFromComposite
toFieldPath: #@ toFieldPath
combine:
  variables:
    - fromFieldPath: spec.codeName
    - fromFieldPath: spec.profile
    - fromFieldPath: spec.suffix
  strategy: string
  string:
    fmt: #@ "%s-%s-%s-" + suffix
#@ end

#@ def eksControlPlaneRole():
name: eks-control-plane-role
base:
  apiVersion: iam.aws.upbound.io/v1beta1
  kind: Role
  metadata:
    name: ""
  spec:
    forProvider:
      assumeRolePolicy: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
    providerConfigRef:
      name: aws-upjet-provider
patches:
  - #@ codeNameTagPatch()
  - #@ roleNamePatch(toFieldPath="metadata.name",suffix="eks-cluster-role")
#@ end

#@ def eksControlPlaneRoleAttachment():
name: eks-controlplane-role-attachment
base:
  apiVersion: iam.aws.upbound.io/v1beta1
  kind: RolePolicyAttachment
  metadata:
    name: ""
  spec:
    forProvider:
      policyArn: "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
      role: ""
    providerConfigRef:
      name: aws-upjet-provider
patches:
   - #@ codeNameTagPatch()
   - #@ roleNamePatch(toFieldPath="metadata.name",suffix="eks-cluster-role")
   - #@ roleNamePatch(toFieldPath="spec.forProvider.role",suffix="eks-cluster-role")
#@ end

#@ def eksNodeRole():
name: eks-node-role
base:
  apiVersion: iam.aws.upbound.io/v1beta1
  kind: Role
  metadata:
    name: ""
  spec:
    forProvider:
      assumeRolePolicy: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
    providerConfigRef:
      name: aws-upjet-provider
patches:
  - #@ codeNameTagPatch()
  - #@ roleNamePatch(toFieldPath="metadata.name",suffix="eks-node-role")
#@ end

#@ def eksNodeRoleAttachment(name,policyArn):
name: #@ "eks-node-role-attachment-" + name
base:
  apiVersion: iam.aws.upbound.io/v1beta1
  kind: RolePolicyAttachment
  metadata:
    name: ""
  spec:
    forProvider:
      policyArn: #@ policyArn
      role: ""
    providerConfigRef:
      name: aws-upjet-provider
patches:
   - #@ codeNameTagPatch()
   - #@ roleNamePatch(toFieldPath="metadata.name",suffix="eks-node-role-"+name)
   - #@ roleNamePatch(toFieldPath="spec.forProvider.role",suffix="eks-node-role")
#@ end

apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: tap-cluster
  labels:
    crossplane.io/xrd: xclusters.aws.tap.example.com
spec:
  compositeTypeRef:
    apiVersion: aws.tap.example.com/v1alpha1
    kind: XCluster
  resources:
    - #@ eksControlPlaneRole()
    - #@ eksControlPlaneRoleAttachment()
    - #@ eksNodeRole()
    - #@ eksNodeRoleAttachment(name="node",policyArn="arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy")
    - #@ eksNodeRoleAttachment(name="ecr",policyArn="arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly")
    - #@ eksNodeRoleAttachment(name="cni",policyArn="arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy")


    