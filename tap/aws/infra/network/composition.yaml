
#! 
#! define the repo for object for tap 
#!

#@ def labelObject():
type: FromCompositeFieldPath
toFieldPath: metadata.labels.tap
fromFieldPath: spec.codeName
#@ end

#@ def vpcNamePatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.codeName
transforms:
  - type: string
    string:
      fmt: "%s-vpc"  
#@ end

#@ def codeNameTagPatch():
type: FromCompositeFieldPath
toFieldPath: spec.forProvider.tags.tap
fromFieldPath: spec.codeName
#@ end

#@ def azNamePatch(toFieldPath,az):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.region
transforms:
  - type: string
    string:
      fmt: #@ "%s" + az  
#@ end

#@ def regionPatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.region
#@ end

#@ def vpc(): 
name: tap
base: 
  apiVersion: ec2.aws.upbound.io/v1beta1
  kind: VPC
  spec:
    forProvider:
      cidrBlock: 10.0.0.0/16
      region: us-east-2
      enableDnsSupport: true
      enableDnsHostnames: true

      instanceTenancy: default
    providerConfigRef:
      name: aws-upjet-provider
patches:
- #@ regionPatch(toFieldPath="spec.forProvider.region")
- #@ vpcNamePatch(toFieldPath="spec.forProvider.tags.Name")
- #@ vpcNamePatch(toFieldPath="metadata.name")
- #@ codeNameTagPatch()
- #@ labelObject()
#@ end

#@ def subnetNamePatch(toFieldPath,type,az):
type: CombineFromComposite
toFieldPath: #@ toFieldPath
combine:
  variables:
    - fromFieldPath: spec.codeName
    - fromFieldPath: spec.region
  strategy: string
  string:
    fmt: #@  "vpc-%s-" + type + "-subnet-%s" + az 
#@ end

#@ def subnet(type,az,cidr):
name: #@ "vpc-" + type + "-subnet-" + az
base: 
  apiVersion: ec2.aws.upbound.io/v1beta1
  kind: Subnet
  metadata:
    name: ""
  spec:
    forProvider:
      vpcIdRef:
        name: "" 
      tags: 
        Name: ""
      region: ""
      mapPublicIpOnLaunch: true
      enableResourceNameDnsARecordOnLaunch: true
      availabilityZone: ""
      cidrBlock: #@ cidr
    providerConfigRef:
      name: aws-upjet-provider
patches:
- #@ codeNameTagPatch()
- #@ regionPatch(toFieldPath="spec.forProvider.region")
- #@ vpcNamePatch(toFieldPath="spec.forProvider.vpcIdRef.name")
- #@ azNamePatch(az=az,toFieldPath="spec.forProvider.availabilityZone")
- #@ subnetNamePatch(type=type,az=az,toFieldPath="spec.forProvider.tags.Name")
- #@ subnetNamePatch(type=type,az=az,toFieldPath="metadata.name")
- #@ labelObject()
#@ end

#@ def internetGatewayNamePatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.codeName
transforms:
  - type: string
    string:
      fmt: "%s-vpc-internet-gateway"  
#@ end

#@ def internetGateway(): 
name: internet-gateway
base:
  apiVersion: ec2.aws.upbound.io/v1beta1
  kind: InternetGateway
  metadata:
    name: "" 
  spec:
    forProvider:
      region: ""
      tags:
        Name:  ""
      vpcIdRef:
        name: ""
    providerConfigRef:
      name: aws-upjet-provider
patches:
- #@ codeNameTagPatch()
- #@ regionPatch(toFieldPath="spec.forProvider.region")
- #@ vpcNamePatch(toFieldPath="spec.forProvider.vpcIdRef.name")
- #@ internetGatewayNamePatch(toFieldPath="metadata.name")
- #@ internetGatewayNamePatch(toFieldPath="spec.forProvider.tags.Name")
- #@ labelObject()
#@ end

#@ def defaultRouteTableNamePatch(toFieldPath):
type: FromCompositeFieldPath
toFieldPath: #@ toFieldPath
fromFieldPath: spec.codeName
transforms:
  - type: string
    string:
      fmt: "%s-vpc-route-table-main"  
#@ end

#@ def defaultRouteTable():
name: default-route-table
base: 
  apiVersion: ec2.aws.upbound.io/v1beta1
  kind: DefaultRouteTable
  metadata:
    name: ""
  spec:
    forProvider:
      defaultRouteTableIdRef:
        name: ""
      region: ""
      route:
        - cidrBlock: 0.0.0.0/0
          gatewayIdRef:
            name: ""
      tags:
        Name: ""
    providerConfigRef:
      name: aws-upjet-provider
patches:
- #@ codeNameTagPatch()
- #@ regionPatch(toFieldPath="spec.forProvider.region")
- #@ internetGatewayNamePatch(toFieldPath="spec.forProvider.route[0].gatewayIdRef.name")
- #@ defaultRouteTableNamePatch(toFieldPath="spec.forProvider.tags.Name")
- #@ vpcNamePatch(toFieldPath="spec.forProvider.defaultRouteTableIdRef.name")
- #@ labelObject()
#@ end


apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: tap-aws-network-vpc
  labels:
    crossplane.io/xrd: xnetworks.aws.tap.example.com
spec:
  compositeTypeRef:
    apiVersion: aws.tap.example.com/v1alpha1
    kind: XNetwork
  patchSets:
    - name: codeNameLabel
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.codeName
          toFieldPath: metadata.labels.tap
  resources:
    - #@ vpc()
    - #@ subnet(az="a", cidr="10.0.0.0/19", type="public")
    - #@ subnet(az="b", cidr="10.0.64.0/19", type="public")
    - #@ subnet(az="c", cidr="10.0.128.0/19", type="public")
    - #@ internetGateway()
    - #@ defaultRouteTable()
    